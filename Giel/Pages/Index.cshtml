@page
@model Giel.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CurrencyRate[0].CurrencyCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrencyRate[0].Rate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrencyRate[0].Date)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.CurrencyRate) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CurrencyCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<canvas id="chart" width="800" height="400"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('chart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.CurrencyRate.Select(x => x.Date.ToString("yyyy-MM-dd")))),
                datasets: [{
                    label: 'Kurs USD',
                    data: @Html.Raw(Json.Serialize(Model.CurrencyRate.Select(x => x.Rate))),
                    borderColor: 'blue',
                    borderWidth: 2,
                    fill: false
                }]
            }
        });
    </script>
}
